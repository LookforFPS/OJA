package me.lookforfps.oja.chatcompletion.response;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import me.lookforfps.oja.chatcompletion.entity.Message;
import me.lookforfps.oja.chatcompletion.content.TextContent;
import me.lookforfps.oja.chatcompletion.response.logprobs.LogProbs;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class Choice {

    /**
     * <b>Description: </b>
     * The index of the choice in the list of choices.
     */
    private Integer index;
    /**
     * <b>Description: </b>
     * A chat completion message generated by the model.
     */
    private Message message;
    /**
     * <b>Description: </b>
     * Log probability information for the choice.
     */
    private LogProbs logprobs;
    /**
     * <b>Description: </b>
     * The reason the model stopped generating tokens.
     * This will be <code>stop</code> if the model hit a natural stop point or a provided stop sequence, <code>length</code> if the maximum number of tokens specified in the request was reached, <code>content_filter</code> if content was omitted due to a flag from our content filters, <code>tool_calls</code> if the model called a tool, or <code>function_call</code> (deprecated) if the model called a function.
     */
    private String finish_reason;

    public TextContent getFirstTextContent() {
        return this.message.getContent().getFirstTextContent();
    }
}
